{"ast":null,"code":"import _classCallCheck from \"/Users/Laryna/Lambda/Redux-Friends/friends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Laryna/Lambda/Redux-Friends/friends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Laryna/Lambda/Redux-Friends/friends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Laryna/Lambda/Redux-Friends/friends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Laryna/Lambda/Redux-Friends/friends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Laryna/Lambda/Redux-Friends/friends/src/components/Protected.js\";\nimport React from 'react';\nimport { getFriends } from '../actions';\nimport { connect } from 'react-redux';\nimport Friend from './Friend';\n\nvar Protected =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Protected, _React$Component);\n\n  function Protected() {\n    _classCallCheck(this, Protected);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Protected).apply(this, arguments));\n  }\n\n  _createClass(Protected, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getFriends();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Friend List\")), this.props.gettingFriends ? React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Getting Friends\") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, this.props.friends.map(function (friend) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Add A Friend\"), React.createElement(Friend, {\n          name: friend.name,\n          id: friend.id,\n          age: friend.age,\n          email: friend.email,\n          key: friend.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }));\n      })), this.props.error !== \"\" ? React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.props.error) : null);\n    }\n  }]);\n\n  return Protected;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    // our state machine is working for us based on fetching, success, and error. lets make sure our component knows about the state machine\n    friends: state.friends,\n    // dogs for when we have the data!\n    error: state.error,\n    // error for when we mispell something!\n    gettingFriends: state.gettingFriends // pending state, the fetching spinner or loading message etc. for when we're fetching!\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getFriends: getFriends\n})(Protected);","map":{"version":3,"sources":["/Users/Laryna/Lambda/Redux-Friends/friends/src/components/Protected.js"],"names":["React","getFriends","connect","Friend","Protected","props","gettingFriends","friends","map","friend","name","id","age","email","error","Component","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAEMC,S;;;;;;;;;;;;;wCACkB;AAChB,WAAKC,KAAL,CAAWJ,UAAX;AACH;;;6BAEQ;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,EAIG,KAAKI,KAAL,CAAWC,cAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,MAAM,EAAI;AAChC,eACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,MAAD;AACI,UAAA,IAAI,EAAEA,MAAM,CAACC,IADjB;AAEI,UAAA,EAAE,EAAED,MAAM,CAACE,EAFf;AAGI,UAAA,GAAG,EAAEF,MAAM,CAACG,GAHhB;AAII,UAAA,KAAK,EAAEH,MAAM,CAACI,KAJlB;AAKI,UAAA,GAAG,EAAEJ,MAAM,CAACE,EALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADA;AAYD,OAbA,CADH,CAPJ,EAwBG,KAAKN,KAAL,CAAWS,KAAX,KAAqB,EAArB,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKT,KAAL,CAAWS,KAAhB,CAA1B,GAAwD,IAxB3D,CADF;AA4BD;;;;EAlCiBd,KAAK,CAACe,S;;AAqC1B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACL;AACAV,IAAAA,OAAO,EAAEU,KAAK,CAACV,OAFV;AAEmB;AACxBO,IAAAA,KAAK,EAAEG,KAAK,CAACH,KAHR;AAGe;AACpBR,IAAAA,cAAc,EAAEW,KAAK,CAACX,cAJjB,CAIgC;;AAJhC,GAAP;AAMD,CAPD;;AASA,eAAeJ,OAAO,CAACc,eAAD,EAAkB;AAAEf,EAAAA,UAAU,EAAVA;AAAF,CAAlB,CAAP,CAAyCG,SAAzC,CAAf","sourcesContent":["import React from 'react';\nimport { getFriends } from '../actions';\nimport { connect } from 'react-redux';\nimport Friend from './Friend';\n\nclass Protected extends React.Component {\n    componentDidMount() {\n        this.props.getFriends();\n    }\n\n    render() {\n        return (\n          <div>\n            <header>\n              <h1>Friend List</h1>\n            </header>\n            {this.props.gettingFriends ? (\n              <h3>Getting Friends</h3>\n            ) : (\n              <div>\n                {this.props.friends.map(friend => {\n                  return (\n                  <div>\n                    <h4>Add A Friend</h4>  \n                    <Friend\n                        name={friend.name}\n                        id={friend.id}\n                        age={friend.age}\n                        email={friend.email}\n                        key={friend.id}     \n                    />\n                  </div>\n                  );\n                })}\n              </div>\n            )}\n            {this.props.error !== \"\" ? <h4>{this.props.error}</h4> : null}\n          </div>\n        );\n      }\n    }\n    \n    const mapStateToProps = state => {\n      return {\n        // our state machine is working for us based on fetching, success, and error. lets make sure our component knows about the state machine\n        friends: state.friends, // dogs for when we have the data!\n        error: state.error, // error for when we mispell something!\n        gettingFriends: state.gettingFriends // pending state, the fetching spinner or loading message etc. for when we're fetching!\n      };\n    };\n    \n    export default connect(mapStateToProps, { getFriends })(Protected);\n"]},"metadata":{},"sourceType":"module"}