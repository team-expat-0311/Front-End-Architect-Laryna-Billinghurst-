{"ast":null,"code":"import _objectSpread from \"/Users/Laryna/Lambda/Front-End-Architect-Laryna-Billinghurst-/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ERROR, ADDING_USER, ADD_USER, GETTING_PHOTOS, GET_PHOTOS } from '../actions';\nvar initialState = {\n  register: [],\n  all: [],\n  addingUser: false,\n  gettingPhotos: false,\n  error: null\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADDING_USER:\n      return _objectSpread({}, state, {\n        addingUser: true\n      });\n\n    case ADD_USER:\n      return _objectSpread({}, state, {\n        register: action.payload,\n        addingUser: false\n      });\n\n    case GETTING_PHOTOS:\n      return _objectSpread({}, state, {\n        gettingPhotos: true\n      });\n\n    case GET_PHOTOS:\n      return _objectSpread({}, state, {\n        all: action.payload,\n        gettingPhotos: false\n      });\n\n    case ERROR:\n      return _objectSpread({}, state, {\n        addingUser: false,\n        gettingPhotos: false,\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/Laryna/Lambda/Front-End-Architect-Laryna-Billinghurst-/my-app/src/reducers/index.js"],"names":["ERROR","ADDING_USER","ADD_USER","GETTING_PHOTOS","GET_PHOTOS","initialState","register","all","addingUser","gettingPhotos","error","reducer","state","action","type","payload"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,cAAvC,EAAuDC,UAAvD,QAAyE,YAAzE;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,GAAG,EAAE,EAFY;AAGjBC,EAAAA,UAAU,EAAE,KAHK;AAIjBC,EAAAA,aAAa,EAAE,KAJE;AAKjBC,EAAAA,KAAK,EAAE;AALU,CAArB;;AAQA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,WAAL;AACI,+BAAYW,KAAZ;AAAmBJ,QAAAA,UAAU,EAAE;AAA/B;;AACJ,SAAKN,QAAL;AACI,+BAAYU,KAAZ;AAAmBN,QAAAA,QAAQ,EAAEO,MAAM,CAACE,OAApC;AAA6CP,QAAAA,UAAU,EAAE;AAAzD;;AACJ,SAAKL,cAAL;AACI,+BAAUS,KAAV;AAAiBH,QAAAA,aAAa,EAAE;AAAhC;;AACJ,SAAKL,UAAL;AACI,+BAAUQ,KAAV;AAAiBL,QAAAA,GAAG,EAAEM,MAAM,CAACE,OAA7B;AAAsCN,QAAAA,aAAa,EAAE;AAArD;;AACJ,SAAKT,KAAL;AACI,+BACOY,KADP;AAEIJ,QAAAA,UAAU,EAAE,KAFhB;AAGIC,QAAAA,aAAa,EAAE,KAHnB;AAIIC,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAJlB;;AAMJ;AACI,aAAOH,KAAP;AAjBR;AAmBH,CApBD;;AAsBA,eAAeD,OAAf","sourcesContent":["import { ERROR, ADDING_USER, ADD_USER, GETTING_PHOTOS, GET_PHOTOS } from '../actions';\n\nconst initialState = {\n    register: [],\n    all: [],\n    addingUser: false,\n    gettingPhotos: false,\n    error: null\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADDING_USER:\n            return { ...state, addingUser: true };\n        case ADD_USER: \n            return { ...state, register: action.payload, addingUser: false };\n        case GETTING_PHOTOS:\n            return{...state, gettingPhotos: true };\n        case GET_PHOTOS:\n            return{...state, all: action.payload, gettingPhotos: false };\n        case ERROR:\n            return {\n                ...state,\n                addingUser: false,\n                gettingPhotos: false,\n                error: action.payload\n            }                    \n        default:\n            return state;        \n    }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}