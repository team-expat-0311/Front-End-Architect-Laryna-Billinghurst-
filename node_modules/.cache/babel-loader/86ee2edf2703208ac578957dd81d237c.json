{"ast":null,"code":"import _classCallCheck from \"/Users/Laryna/Lambda/Front-End-Architect-Laryna-Billinghurst-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Laryna/Lambda/Front-End-Architect-Laryna-Billinghurst-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Laryna/Lambda/Front-End-Architect-Laryna-Billinghurst-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Laryna/Lambda/Front-End-Architect-Laryna-Billinghurst-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Laryna/Lambda/Front-End-Architect-Laryna-Billinghurst-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Laryna/Lambda/Front-End-Architect-Laryna-Billinghurst-/src/components/ImgDrop.js\";\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\nimport request from 'superagent';\nimport { connect } from 'react-redux';\nimport { addPhoto } from '../actions';\nvar CLOUDINARY_UPLOAD_PRESET = 'hgdd9gxv';\nvar CLOUDINARY_UPLOAD_URL = 'https://api.cloudinary.com/v1_1/expat_journal/upload';\n\nvar ImgDrop =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImgDrop, _React$Component);\n\n  function ImgDrop() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ImgDrop);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ImgDrop)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      img_url: '',\n      uploadedFile: null\n    };\n\n    _this.handleAddPhoto = function (_) {\n      var img_url = _this.state.img_url;\n\n      _this.props.addPhoto(localStorage.getItem('user_id'), {\n        img_url: img_url\n      });\n\n      _this.setState({\n        img_url: ''\n      });\n    };\n\n    _this.onDrop = function (acceptedFiles) {\n      console.log(acceptedFiles);\n\n      _this.setState({\n        uploadedFile: acceptedFiles[0]\n      });\n\n      _this.handleImageUpload(acceptedFiles[0]);\n    };\n\n    _this.handleImageUpload = function (file) {\n      var upload = request.post(CLOUDINARY_UPLOAD_URL).field('upload_preset', CLOUDINARY_UPLOAD_PRESET).field('file', file).field('api_key', 882347815869688);\n      upload.end(function (err, res) {\n        if (err) {\n          console.error(err);\n        }\n\n        if (res.body.secure_url !== '') {\n          _this.setState({\n            img_url: res.body.secure_url\n          });\n\n          console.log(res.body.secure_url);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ImgDrop, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Dropzone, {\n        onDrop: this.onDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"dropzone\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Drag and Drop Images Here\"));\n      });\n    }\n  }]);\n\n  return ImgDrop;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    error: state.error,\n    addingPhoto: state.addingPhoto\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addPhoto: addPhoto\n})(ImgDrop);","map":{"version":3,"sources":["/Users/Laryna/Lambda/Front-End-Architect-Laryna-Billinghurst-/src/components/ImgDrop.js"],"names":["React","Dropzone","request","connect","addPhoto","CLOUDINARY_UPLOAD_PRESET","CLOUDINARY_UPLOAD_URL","ImgDrop","state","img_url","uploadedFile","handleAddPhoto","_","props","localStorage","getItem","setState","onDrop","acceptedFiles","console","log","handleImageUpload","file","upload","post","field","end","err","res","error","body","secure_url","getRootProps","Component","mapStateToProps","addingPhoto"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAGA,IAAMC,wBAAwB,GAAG,UAAjC;AACA,IAAMC,qBAAqB,GAAG,sDAA9B;;IAEMC,O;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,YAAY,EAAE;AAFV,K;;UAINC,c,GAAiB,UAAAC,CAAC,EAAI;AAAA,UACZH,OADY,GACA,MAAKD,KADL,CACZC,OADY;;AAEpB,YAAKI,KAAL,CAAWT,QAAX,CAAoBU,YAAY,CAACC,OAAb,CAAqB,SAArB,CAApB,EAAoD;AAAEN,QAAAA,OAAO,EAAPA;AAAF,OAApD;;AACA,YAAKO,QAAL,CAAc;AAAEP,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,K;;UAEDQ,M,GAAS,UAAAC,aAAa,EAAI;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;;AACA,YAAKF,QAAL,CAAc;AACZN,QAAAA,YAAY,EAAEQ,aAAa,CAAC,CAAD;AADf,OAAd;;AAIA,YAAKG,iBAAL,CAAuBH,aAAa,CAAC,CAAD,CAApC;AACD,K;;UAEDG,iB,GAAoB,UAAAC,IAAI,EAAI;AAC1B,UAAIC,MAAM,GAAGrB,OAAO,CAACsB,IAAR,CAAalB,qBAAb,EACVmB,KADU,CACJ,eADI,EACapB,wBADb,EAEVoB,KAFU,CAEJ,MAFI,EAEIH,IAFJ,EAGVG,KAHU,CAGJ,SAHI,EAGO,eAHP,CAAb;AAKAF,MAAAA,MAAM,CAACG,GAAP,CAAW,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvB,YAAID,GAAJ,EAAS;AACPR,UAAAA,OAAO,CAACU,KAAR,CAAcF,GAAd;AACD;;AAED,YAAIC,GAAG,CAACE,IAAJ,CAASC,UAAT,KAAwB,EAA5B,EAAgC;AAC9B,gBAAKf,QAAL,CAAc;AACZP,YAAAA,OAAO,EAAEmB,GAAG,CAACE,IAAJ,CAASC;AADN,WAAd;;AAGAZ,UAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAG,CAACE,IAAJ,CAASC,UAArB;AACD;AACF,OAXD;AAYD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKd,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA,YAAEe,YAAF,QAAEA,YAAF;AAAA,eACD,6CAASA,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACE;AAAG,UAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,CADC;AAAA,OADH,CADF;AASD;;;;EAlDehC,KAAK,CAACiC,S;;AAqDxB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAA1B,KAAK,EAAI;AAC/B,SAAO;AACLqB,IAAAA,KAAK,EAAErB,KAAK,CAACqB,KADR;AAELM,IAAAA,WAAW,EAAE3B,KAAK,CAAC2B;AAFd,GAAP;AAID,CALD;;AAOA,eAAehC,OAAO,CAAC+B,eAAD,EAAkB;AAAE9B,EAAAA,QAAQ,EAARA;AAAF,CAAlB,CAAP,CAAuCG,OAAvC,CAAf","sourcesContent":["import React from 'react';\nimport Dropzone from 'react-dropzone';\nimport request from 'superagent';\nimport { connect } from 'react-redux';\nimport { addPhoto } from '../actions';\n\n\nconst CLOUDINARY_UPLOAD_PRESET = 'hgdd9gxv';\nconst CLOUDINARY_UPLOAD_URL = 'https://api.cloudinary.com/v1_1/expat_journal/upload';\n\nclass ImgDrop extends React.Component {\n    state = {\n        img_url: '',\n        uploadedFile: null\n      }\n      handleAddPhoto = _ => {\n        const { img_url } = this.state;\n        this.props.addPhoto(localStorage.getItem('user_id'),{ img_url });\n        this.setState({ img_url: '' });\n      };\n    \n      onDrop = acceptedFiles => {\n        console.log(acceptedFiles);\n        this.setState({\n          uploadedFile: acceptedFiles[0]\n        })\n    \n        this.handleImageUpload(acceptedFiles[0]);\n      }\n    \n      handleImageUpload = file => {\n        let upload = request.post(CLOUDINARY_UPLOAD_URL)\n          .field('upload_preset', CLOUDINARY_UPLOAD_PRESET)\n          .field('file', file)\n          .field('api_key', 882347815869688)\n    \n        upload.end((err, res) => {\n          if (err) {\n            console.error(err)\n          }\n    \n          if (res.body.secure_url !== '') {\n            this.setState({\n              img_url: res.body.secure_url\n            });\n            console.log(res.body.secure_url)\n          }\n        });\n      }\n    \n      render() {\n        return (\n          <Dropzone onDrop={this.onDrop}>\n            {({getRootProps}) => (\n            <div {...getRootProps()}>\n              <p className='dropzone'>Drag and Drop Images Here</p>\n            </div>\n            )}\n          </Dropzone>\n        )\n      }\n    }\n    \n    const mapStateToProps = state => {\n      return {\n        error: state.error,\n        addingPhoto: state.addingPhoto\n      };\n    };\n    \n    export default connect(mapStateToProps, { addPhoto })(ImgDrop);"]},"metadata":{},"sourceType":"module"}