{"ast":null,"code":"import _classCallCheck from \"/Users/Laryna/Lambda/Redux-Friends/friends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Laryna/Lambda/Redux-Friends/friends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Laryna/Lambda/Redux-Friends/friends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Laryna/Lambda/Redux-Friends/friends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Laryna/Lambda/Redux-Friends/friends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Laryna/Lambda/Redux-Friends/friends/src/components/Protected.js\";\nimport React from 'react';\nimport { getFriends } from '../actions';\nimport { connect } from 'react-redux';\n\nvar Protected =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Protected, _React$Component);\n\n  function Protected() {\n    _classCallCheck(this, Protected);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Protected).apply(this, arguments));\n  }\n\n  _createClass(Protected, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getFriends();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Friend List\")), this.props.getFriends ? React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Getting Friends\") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.props.friends.map(function (friend) {\n        return React.createElement(\"div\", {\n          key: friend.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, friend.name);\n      })), this.props.error !== \"\" ? React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.props.error) : null);\n    }\n  }]);\n\n  return Protected;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    // our state machine is working for us based on fetching, success, and error. lets make sure our component knows about the state machine\n    friends: state.friends,\n    // dogs for when we have the data!\n    error: state.error,\n    // error for when we mispell something!\n    gettingFriends: state.gettingFriends // pending state, the fetching spinner or loading message etc. for when we're fetching!\n\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getFriends: getFriends\n})(Protected);","map":{"version":3,"sources":["/Users/Laryna/Lambda/Redux-Friends/friends/src/components/Protected.js"],"names":["React","getFriends","connect","Protected","props","friends","map","friend","id","name","error","Component","mapStateToProps","state","gettingFriends"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,S;;;;;;;;;;;;;wCACkB;AAChB,WAAKC,KAAL,CAAWH,UAAX;AACH;;;6BAEQ;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,EAIG,KAAKG,KAAL,CAAWH,UAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKG,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,MAAM,EAAI;AAChC,eACA;AAAK,UAAA,GAAG,EAAEA,MAAM,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCD,MAAM,CAACE,IADR,CADA;AAKD,OANA,CADH,CAPJ,EAiBG,KAAKL,KAAL,CAAWM,KAAX,KAAqB,EAArB,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKN,KAAL,CAAWM,KAAhB,CAA1B,GAAwD,IAjB3D,CADF;AAqBD;;;;EA3BiBV,KAAK,CAACW,S;;AA8B1B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACL;AACAR,IAAAA,OAAO,EAAEQ,KAAK,CAACR,OAFV;AAEmB;AACxBK,IAAAA,KAAK,EAAEG,KAAK,CAACH,KAHR;AAGe;AACpBI,IAAAA,cAAc,EAAED,KAAK,CAACC,cAJjB,CAIgC;;AAJhC,GAAP;AAMD,CAPD;;AASA,eAAeZ,OAAO,CAACU,eAAD,EAAkB;AAAEX,EAAAA,UAAU,EAAVA;AAAF,CAAlB,CAAP,CAAyCE,SAAzC,CAAf","sourcesContent":["import React from 'react';\nimport { getFriends } from '../actions';\nimport { connect } from 'react-redux';\n\nclass Protected extends React.Component {\n    componentDidMount() {\n        this.props.getFriends();\n    }\n\n    render() {\n        return (\n          <div>\n            <header>\n              <h1>Friend List</h1>\n            </header>\n            {this.props.getFriends ? (\n              <h3>Getting Friends</h3>\n            ) : (\n              <div>\n                {this.props.friends.map(friend => {\n                  return (\n                  <div key={friend.id}>\n                  {friend.name}\n                  </div>\n                  );\n                })}\n              </div>\n            )}\n            {this.props.error !== \"\" ? <h4>{this.props.error}</h4> : null}\n          </div>\n        );\n      }\n    }\n    \n    const mapStateToProps = state => {\n      return {\n        // our state machine is working for us based on fetching, success, and error. lets make sure our component knows about the state machine\n        friends: state.friends, // dogs for when we have the data!\n        error: state.error, // error for when we mispell something!\n        gettingFriends: state.gettingFriends // pending state, the fetching spinner or loading message etc. for when we're fetching!\n      };\n    };\n    \n    export default connect(mapStateToProps, { getFriends })(Protected);\n"]},"metadata":{},"sourceType":"module"}