{"ast":null,"code":"import axios from 'axios';\nexport var LOGIN_START = 'LOGIN_START';\nexport var ERROR = 'ERROR';\nexport var ADDING_USER = 'ADDING_USER';\nexport var ADD_USER = 'ADD_USER';\nexport var GETTING_PHOTOS = 'GETTING_PHOTOS';\nexport var GET_PHOTOS = 'GET_PHOTOS';\nexport var login = function login(creds) {\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN_START\n    });\n    return axios.post('https://expat-journal.herokuapp.com/api/auth/login', creds).then(function (res) {\n      localStorage.setItem('token', res.data.token, console.log(res));\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: res.data.payload\n      });\n    });\n  };\n};\nexport var addUser = function addUser(user) {\n  var newUser = axios.post('https://expat-journal.herokuapp.com/api/auth/register', user).then(function (res) {\n    return console.log(res);\n  });\n  return function (dispatch) {\n    dispatch({\n      type: ADDING_USER\n    });\n    newUser.then(function (_ref) {\n      var data = _ref.data;\n      dispatch({\n        type: ADD_USER,\n        payload: data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: ERROR,\n        payload: err\n      });\n    });\n  };\n};\nexport var getPhotos = function getPhotos() {\n  var all = axios.get('https://expat-journal.herokuapp.com/api/photos/all/123', {\n    headers: {\n      Authorization: localStorage.getItem('token')\n    }\n  });\n  return function (dispatch) {\n    dispatch({\n      type: GETTING_PHOTOS\n    });\n    all.then(function (response) {\n      dispatch({\n        type: GET_PHOTOS,\n        payload: response.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: ERROR,\n        payload: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Laryna/Lambda/Front-End-Architect-Laryna-Billinghurst-/src/actions/index.js"],"names":["axios","LOGIN_START","ERROR","ADDING_USER","ADD_USER","GETTING_PHOTOS","GET_PHOTOS","login","creds","dispatch","type","post","then","res","localStorage","setItem","data","token","console","log","payload","addUser","user","newUser","catch","err","getPhotos","all","get","headers","Authorization","getItem","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,IAAMC,KAAK,GAAG,OAAd;AAEP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,QAAQ,GAAG,UAAjB;AAEP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,UAAU,GAAG,YAAnB;AAEP,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SAAI,UAAAC,QAAQ,EAAI;AACxCA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACA,WAAOD,KAAK,CAACW,IAAN,CAAW,oDAAX,EAAiEH,KAAjE,EACNI,IADM,CACD,UAAAC,GAAG,EAAI;AAACC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,GAAG,CAACG,IAAJ,CAASC,KAAvC,EAA8CC,OAAO,CAACC,GAAR,CAAYN,GAAZ,CAA9C;AACdJ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,eAAR;AAAyBU,QAAAA,OAAO,EAAEP,GAAG,CAACG,IAAJ,CAASI;AAA3C,OAAD,CAAR;AACC,KAHM,CAAP;AAID,GANyB;AAAA,CAAnB;AAQP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,IAAI,EAAI;AAC7B,MAAMC,OAAO,GAAGvB,KAAK,CAACW,IAAN,CAAW,uDAAX,EAAoEW,IAApE,EACdV,IADc,CACR,UAAAC,GAAG;AAAA,WAAIK,OAAO,CAACC,GAAR,CAAYN,GAAZ,CAAJ;AAAA,GADK,CAAhB;AAEA,SAAO,UAAAJ,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACEoB,IAAAA,OAAO,CACRX,IADC,CACI,gBAAc;AAAA,UAAXI,IAAW,QAAXA,IAAW;AAClBP,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEN,QAAR;AAAkBgB,QAAAA,OAAO,EAAEJ;AAA3B,OAAD,CAAR;AACD,KAHC,EAIDQ,KAJC,CAIK,UAAAC,GAAG,EAAI;AACZhB,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAER,KAAR;AAAekB,QAAAA,OAAO,EAAEK;AAAxB,OAAD,CAAR;AACD,KANC;AAOH,GATD;AAUD,CAbM;AAeP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,MAAMC,GAAG,GAAG3B,KAAK,CAAC4B,GAAN,CAAU,wDAAV,EAAoE;AAC9EC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAEhB,YAAY,CAACiB,OAAb,CAAqB,OAArB;AAAjB;AADqE,GAApE,CAAZ;AAGE,SAAO,UAAAtB,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACEsB,IAAAA,GAAG,CACJf,IADC,CACI,UAAAoB,QAAQ,EAAI;AAChBvB,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEJ,UAAR;AAAoBc,QAAAA,OAAO,EAAEY,QAAQ,CAAChB;AAAtC,OAAD,CAAR;AACD,KAHC,EAIDQ,KAJC,CAIK,UAAAC,GAAG,EAAI;AACZhB,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAER,KAAR;AAAekB,QAAAA,OAAO,EAAEK;AAAxB,OAAD,CAAR;AACD,KANC;AAOH,GATD;AAUH,CAdM","sourcesContent":["import axios from 'axios';\n\nexport const LOGIN_START = 'LOGIN_START';\n\nexport const ERROR = 'ERROR';\n\nexport const ADDING_USER = 'ADDING_USER';\nexport const ADD_USER = 'ADD_USER';\n\nexport const GETTING_PHOTOS = 'GETTING_PHOTOS';\nexport const GET_PHOTOS = 'GET_PHOTOS';\n\nexport const login = creds => dispatch => {\n  dispatch({ type: LOGIN_START });\n  return axios.post('https://expat-journal.herokuapp.com/api/auth/login', creds)\n  .then(res => {localStorage.setItem('token', res.data.token, console.log(res));\n  dispatch({ type: 'LOGIN_SUCCESS', payload: res.data.payload });\n  })\n}\n\nexport const addUser = user => {\n  const newUser = axios.post('https://expat-journal.herokuapp.com/api/auth/register', user\n  ).then( res => console.log(res))\n  return dispatch => {\n    dispatch({ type: ADDING_USER });\n      newUser\n    .then(({ data }) => {\n      dispatch({ type: ADD_USER, payload: data });\n    })\n    .catch(err => {\n      dispatch({ type: ERROR, payload: err });\n    });\n  };\n};\n\nexport const getPhotos = () => {\n  const all = axios.get('https://expat-journal.herokuapp.com/api/photos/all/123', {\n    headers: { Authorization: localStorage.getItem('token') }\n  })\n    return dispatch => {\n      dispatch({ type: GETTING_PHOTOS });\n        all\n      .then(response => {\n        dispatch({ type: GET_PHOTOS, payload: response.data });\n      })\n      .catch(err => {\n        dispatch({ type: ERROR, payload: err });\n      });\n    };\n};"]},"metadata":{},"sourceType":"module"}