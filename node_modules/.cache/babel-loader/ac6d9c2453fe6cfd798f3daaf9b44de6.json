{"ast":null,"code":"import axios from 'axios';\nexport var ERROR = 'ERROR';\nexport var ADDING_USER = 'ADDING_USER';\nexport var ADD_USER = 'ADD_USER';\nexport var addUser = function addUser(user) {\n  var newUser = axios.post('https://expat-journal.herokuapp.com/api/auth/register', user);\n  return function (dispatch) {\n    dispatch({\n      type: ADDING_USER\n    });\n    console.log(user.data);\n    newUser.then(function (_ref) {\n      var data = _ref.data;\n      dispatch({\n        type: ADD_USER,\n        payload: data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: ERROR,\n        payload: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Laryna/Lambda/Front-End-Architect-Laryna-Billinghurst-/my-app/src/actions/index.js"],"names":["axios","ERROR","ADDING_USER","ADD_USER","addUser","user","newUser","post","dispatch","type","console","log","data","then","payload","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,OAAO,IAAMC,KAAK,GAAG,OAAd;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,QAAQ,GAAE,UAAhB;AAEP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,IAAI,EAAI;AAC7B,MAAMC,OAAO,GAAGN,KAAK,CAACO,IAAN,CAAW,uDAAX,EAAoEF,IAApE,CAAhB;AAEA,SAAO,UAAAG,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAaN,IAAI,CAACO,IAAlB;AACEN,IAAAA,OAAO,CACRO,IADC,CACI,gBAAc;AAAA,UAAXD,IAAW,QAAXA,IAAW;AAClBJ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEN,QAAR;AAAkBW,QAAAA,OAAO,EAAEF;AAA3B,OAAD,CAAR;AACD,KAHC,EAIDG,KAJC,CAIK,UAAAC,GAAG,EAAI;AACZR,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAER,KAAR;AAAea,QAAAA,OAAO,EAAEE;AAAxB,OAAD,CAAR;AACD,KANC;AAOH,GAVD;AAWD,CAdM","sourcesContent":["import axios from 'axios';\n\n\n\nexport const ERROR = 'ERROR';\nexport const ADDING_USER = 'ADDING_USER';\nexport const ADD_USER ='ADD_USER';\n\nexport const addUser = user => {\n  const newUser = axios.post('https://expat-journal.herokuapp.com/api/auth/register', user\n  )\n  return dispatch => {\n    dispatch({ type: ADDING_USER });\n    console.log( user.data );\n      newUser\n    .then(({ data }) => {\n      dispatch({ type: ADD_USER, payload: data });\n    })\n    .catch(err => {\n      dispatch({ type: ERROR, payload: err });\n    });\n  };\n};"]},"metadata":{},"sourceType":"module"}